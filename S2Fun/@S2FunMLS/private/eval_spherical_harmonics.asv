function vals = spherical_harmonics(v, deg)
% take all monomials of degree deg, deg-2, ..., mod(deg,2) 
% leave some out since we assume that v are spherical vectors, 
% hence x^2+y^2+z^2 = 1

% extract the coordinates for nicer code
x=v.x; y=v.y; z=v.z;

% get the number of functions corresponding to the degree
dim = (deg + 1) * (deg + 2) / 2;
dim_all = (deg + 1)^2;

% the dimensions of the harmonic spaces
marker = [
    1 ...
    0 0 0 ... 
    1 1 1 1 1 ...
    0 0 0 0 0 0 0 ...
    1 1 1 1 1 1 1 1 1 ...
    0 0 0 0 0 0 0 0 0 0 0 ...
    1 1 1 1 1 1 1 1 1 1 1 1 1]';

% even case 
if mod(deg, 2) == 0
    [ind_even, ~] = find(marker);
    M = full(sparse([1:dim], ind_even(1:dim), ones(dim, 1)));
% odd case
else
    [ind_odd, ~] = find(~marker);
    M = full(sparse([1:dim], ind_odd(1:dim), ones(dim, 1)));
end

M = eye(dim_all);
Y = S2FunHarmonic(M');
vals = Y.eval(v);

end
